snippet startclass
	var util = require('util'),
	inherits = util.inherits;

	function ${1:class}(){
		${2:super}.call(this${3:, arguments});
		${4}
	}

	inherits($1, $2);
snippet class
	function ${1:class}(){
		${2:super}.call(this${3:, arguments});
		${4}
	}

	inherits($1, $2);
snippet ctor
	function ${1:class}(){
		${2:super}.call(this${3:, arguments});
		${4}
	}

	inherits($1, $2);
snippet con
	function ${1:class}(){
		${2:super}.call(this, arguments);
		${3}
	}

	inherits($1, $2);
snippet doc_class
	/**
	 * ${1:class}
	 *
	 * @author ${2:`g:snips_author` <`g:snips_email`>}
	 * @copyright `g:snips_company` - `strftime('%B %d, %Y')`
	 * @package ${3:default}
	 */${4}
# Prototype
snippet proto
	${1:class}.prototype.${2:method} = function(${3:arg}){
		${4}
	}
snippet doc_method
	/**
	 * ${1:method}
	 *
	 * @return ${2:void}
	 */${3}
# Function
snippet fun
	function${1: name}(${2:arg}){
		${3}
	}
# Immediate function
snippet (f
	(function(${1}){
		${3}
	}(${2}));
# if
snippet if
	if (${1:true}) {
		${2}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet t
	${1} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1}) {
		case '${3}':
			${4}
			break;
		${5}
		default:
			${2}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:array}.length; $2${3: += 1}) {
		${4:$1[$2]}
	}
snippet wh
	while (${1:true}) {
		${2}
	}
# try
snippet try
	try {
		${1}
	} catch(${2:e}) {
		${3}
	}
# do...while
snippet do
	do {
		${2}
	} while (${1});
# Object Method
snippet fun:
	${1:method}: function(${2:arg}){
		${4}
	}${3:,}
snippet method
	${1:method}: function(${2:arg}){
		${4}
	}${3:,}
snippet st
	setTimeout(function(){
		${1}
	}, ${2:10});
snippet si
	setInternal(function(){
		${1}
	}, ${2:10});
snippet cl
	console.log(${1});
" Node specific
snippet ex
	module.exports${1:.} = ${2}
snippet mod
	module.exports${1:.} = ${2}
snippet m
	module.exports${1:.} = ${2}
snippet r
	require('${1}')${2}
snippet req
	require('${1}')${2}
snippet v
	var ${1} = ${2}
" nodeuint tests
snippet test 
	module.exports${1:.name} = function(test){
		${2}
		test.done();
	}
snippet testgroup
	module.exports${1:.name} = testCase({
		setUp:function(cb){
			${2}
		},
		tearDown:function(cb){
		}
	})
